version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: encrypted-files-db
    environment:
      POSTGRES_DB: encrypted_files
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO Object Storage (S3-compatible)
  minio:
    image: minio/minio:latest
    container_name: encrypted-files-storage
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"  # API endpoint
      - "9001:9001"  # Web console
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Backend API (uncomment when backend is ready)
  # backend:
  #   build: ./backend
  #   container_name: encrypted-files-backend
  #   environment:
  #     NODE_ENV: production
  #     PORT: 3000
  #     DB_HOST: postgres
  #     DB_PORT: 5432
  #     DB_NAME: encrypted_files
  #     DB_USER: postgres
  #     DB_PASSWORD: postgres
  #     MINIO_ENDPOINT: minio
  #     MINIO_PORT: 9000
  #     MINIO_ACCESS_KEY: minioadmin
  #     MINIO_SECRET_KEY: minioadmin
  #     MINIO_BUCKET: encrypted-files
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - postgres
  #     - minio

  # Frontend (uncomment when frontend is ready)
  # frontend:
  #   build: ./frontend
  #   container_name: encrypted-files-frontend
  #   environment:
  #     VITE_API_URL: http://localhost:3000/api
  #   ports:
  #     - "80:80"
  #   depends_on:
  #     - backend

volumes:
  postgres_data:
    driver: local
  minio_data:
    driver: local

